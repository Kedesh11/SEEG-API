"""Initial migration - create all tables

Revision ID: a9cb9ffa6018
Revises: 
Create Date: 2025-09-18 14:18:35.207250

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9cb9ffa6018'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seeg_agents',
    sa.Column('matricule', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(), nullable=True),
    sa.Column('prenom', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Identifiant unique UUID'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Date et heure de dernière modification'),
    sa.PrimaryKeyConstraint('matricule', 'id')
    )
    op.create_index(op.f('ix_seeg_agents_id'), 'seeg_agents', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sexe', sa.String(), nullable=True),
    sa.Column('matricule', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_matricule'), 'users', ['matricule'], unique=True)
    op.create_table('candidate_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('availability', sa.String(), nullable=True),
    sa.Column('birth_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_department', sa.String(), nullable=True),
    sa.Column('current_position', sa.String(), nullable=True),
    sa.Column('cv_url', sa.String(), nullable=True),
    sa.Column('education', sa.String(), nullable=True),
    sa.Column('expected_salary_min', sa.Integer(), nullable=True),
    sa.Column('expected_salary_max', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('linkedin_url', sa.String(), nullable=True),
    sa.Column('portfolio_url', sa.String(), nullable=True),
    sa.Column('skills', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('job_offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('recruiter_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('contract_type', sa.String(), nullable=False),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('salary_min', sa.Integer(), nullable=True),
    sa.Column('salary_max', sa.Integer(), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('benefits', sa.JSON(), nullable=True),
    sa.Column('responsibilities', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('application_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_limite', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reporting_line', sa.String(), nullable=True),
    sa.Column('salary_note', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('profile', sa.Text(), nullable=True),
    sa.Column('categorie_metier', sa.String(), nullable=True),
    sa.Column('job_grade', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['recruiter_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_drafts',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('job_offer_id', sa.UUID(), nullable=False),
    sa.Column('form_data', sa.JSON(), nullable=True),
    sa.Column('ui_state', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False, comment='Identifiant unique UUID'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Date et heure de création'),
    sa.ForeignKeyConstraint(['job_offer_id'], ['job_offers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'job_offer_id', 'id')
    )
    op.create_index(op.f('ix_application_drafts_id'), 'application_drafts', ['id'], unique=False)
    op.create_table('applications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('candidate_id', sa.UUID(), nullable=True),
    sa.Column('job_offer_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('cover_letter', sa.Text(), nullable=True),
    sa.Column('motivation', sa.Text(), nullable=True),
    sa.Column('reference_contacts', sa.Text(), nullable=True),
    sa.Column('availability_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('url_idee_projet', sa.String(), nullable=True),
    sa.Column('url_lettre_integrite', sa.String(), nullable=True),
    sa.Column('mtp_answers', sa.JSON(), nullable=True),
    sa.Column('mtp_metier_q1', sa.Text(), nullable=True),
    sa.Column('mtp_metier_q2', sa.Text(), nullable=True),
    sa.Column('mtp_metier_q3', sa.Text(), nullable=True),
    sa.Column('mtp_paradigme_q1', sa.Text(), nullable=True),
    sa.Column('mtp_paradigme_q2', sa.Text(), nullable=True),
    sa.Column('mtp_paradigme_q3', sa.Text(), nullable=True),
    sa.Column('mtp_talent_q1', sa.Text(), nullable=True),
    sa.Column('mtp_talent_q2', sa.Text(), nullable=True),
    sa.Column('mtp_talent_q3', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['job_offer_id'], ['job_offers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=True),
    sa.Column('document_type', sa.String(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Date et heure de création'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Date et heure de dernière modification'),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=True),
    sa.Column('changed_by', sa.UUID(), nullable=True),
    sa.Column('previous_status', sa.String(), nullable=True),
    sa.Column('new_status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Date et heure de création'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Date et heure de dernière modification'),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interview_slots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=True),
    sa.Column('candidate_name', sa.String(), nullable=False),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('date', sa.String(), nullable=False),
    sa.Column('time', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('related_application_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Date et heure de dernière modification'),
    sa.ForeignKeyConstraint(['related_application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protocol1_evaluations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=True),
    sa.Column('evaluator_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('documents_verified', sa.Boolean(), nullable=True),
    sa.Column('cv_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('cv_comments', sa.Text(), nullable=True),
    sa.Column('diplomes_certificats_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('diplomes_certificats_comments', sa.Text(), nullable=True),
    sa.Column('lettre_motivation_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('lettre_motivation_comments', sa.Text(), nullable=True),
    sa.Column('documentary_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('metier_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('metier_comments', sa.Text(), nullable=True),
    sa.Column('metier_notes', sa.Text(), nullable=True),
    sa.Column('paradigme_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('paradigme_comments', sa.Text(), nullable=True),
    sa.Column('paradigme_notes', sa.Text(), nullable=True),
    sa.Column('talent_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('talent_comments', sa.Text(), nullable=True),
    sa.Column('talent_notes', sa.Text(), nullable=True),
    sa.Column('mtp_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('interview_metier_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('interview_metier_comments', sa.Text(), nullable=True),
    sa.Column('interview_paradigme_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('interview_paradigme_comments', sa.Text(), nullable=True),
    sa.Column('interview_talent_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('interview_talent_comments', sa.Text(), nullable=True),
    sa.Column('interview_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('interview_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('gap_competence_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('gap_competence_comments', sa.Text(), nullable=True),
    sa.Column('adherence_metier', sa.Boolean(), nullable=True),
    sa.Column('adherence_paradigme', sa.Boolean(), nullable=True),
    sa.Column('adherence_talent', sa.Boolean(), nullable=True),
    sa.Column('overall_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('total_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('general_summary', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['evaluator_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('application_id')
    )
    op.create_table('protocol2_evaluations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=True),
    sa.Column('evaluator_id', sa.UUID(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('interview_completed', sa.Boolean(), nullable=True),
    sa.Column('physical_visit', sa.Boolean(), nullable=True),
    sa.Column('skills_gap_assessed', sa.Boolean(), nullable=True),
    sa.Column('job_sheet_created', sa.Boolean(), nullable=True),
    sa.Column('qcm_role_completed', sa.Boolean(), nullable=True),
    sa.Column('qcm_codir_completed', sa.Boolean(), nullable=True),
    sa.Column('qcm_role_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('qcm_codir_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('overall_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('interview_notes', sa.Text(), nullable=True),
    sa.Column('visit_notes', sa.Text(), nullable=True),
    sa.Column('skills_gap_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['evaluator_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('application_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('protocol2_evaluations')
    op.drop_table('protocol1_evaluations')
    op.drop_table('notifications')
    op.drop_table('interview_slots')
    op.drop_table('application_history')
    op.drop_table('application_documents')
    op.drop_table('applications')
    op.drop_index(op.f('ix_application_drafts_id'), table_name='application_drafts')
    op.drop_table('application_drafts')
    op.drop_table('job_offers')
    op.drop_table('candidate_profiles')
    op.drop_index(op.f('ix_users_matricule'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_seeg_agents_id'), table_name='seeg_agents')
    op.drop_table('seeg_agents')
    # ### end Alembic commands ###
