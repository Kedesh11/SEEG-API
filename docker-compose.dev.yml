version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: seeg-api-dev
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://seeg_user:seeg_password@postgres:5432/seeg_db
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-me}
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - seeg-network

  postgres:
    image: postgres:15-alpine
    container_name: seeg-postgres-dev
    environment:
      - POSTGRES_USER=seeg_user
      - POSTGRES_PASSWORD=seeg_password
      - POSTGRES_DB=seeg_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U seeg_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - seeg-network

  redis:
    image: redis:7-alpine
    container_name: seeg-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - seeg-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: seeg-pgadmin-dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@seeg.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - seeg-network

volumes:
  postgres_data:
  redis_data:

networks:
  seeg-network:
    driver: bridge

