"""
Script de test pour v√©rifier l'envoi d'email de r√©initialisation de mot de passe
"""
import requests
import json
import time

API_BASE_URL = "https://seeg-backend-api.azurewebsites.net"

def test_password_reset_email():
    print("\nüìß TEST EMAIL DE R√âINITIALISATION DE MOT DE PASSE")
    print("=" * 60)
    
    # Email de test (admin)
    test_email = "pendysevan11@gmail.com"
    
    print(f"\nüì§ Envoi de la demande de r√©initialisation pour : {test_email}")
    print("-" * 60)
    
    # 1. Demande de r√©initialisation de mot de passe
    reset_data = {
        "email": test_email
    }
    
    try:
        response = requests.post(
            f"{API_BASE_URL}/api/v1/auth/forgot-password",
            json=reset_data,
            timeout=15
        )
        
        print(f"\nüìä Status Code: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ Requ√™te accept√©e par l'API")
            print(f"\nüìù R√©ponse: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            print("\n" + "=" * 60)
            print("‚è≥ V√âRIFICATION MANUELLE REQUISE")
            print("=" * 60)
            print(f"\nüìß Veuillez v√©rifier votre bo√Æte mail : {test_email}")
            print("\n‚úÖ Ce que vous devriez recevoir :")
            print("   ‚Ä¢ Exp√©diteur : SEEG Recrutement")
            print("   ‚Ä¢ Sujet : R√©initialisation de votre mot de passe")
            print("   ‚Ä¢ Contenu : Email HTML avec un lien de r√©initialisation")
            print("   ‚Ä¢ Lien format : https://[URL]/reset-password?token=...")
            
            print("\nüìã Points √† v√©rifier :")
            print("   1. L'email arrive bien dans la bo√Æte de r√©ception")
            print("   2. Le formatage HTML est correct")
            print("   3. La salutation personnalis√©e est pr√©sente")
            print("   4. Le lien de r√©initialisation fonctionne")
            print("   5. Les instructions de s√©curit√© sont claires")
            
            print("\n‚è±Ô∏è  D√©lai d'attente : ~30 secondes √† 2 minutes")
            print("\nüí° Si vous ne recevez pas l'email :")
            print("   ‚Ä¢ V√©rifiez les spams/ind√©sirables")
            print("   ‚Ä¢ V√©rifiez la configuration SMTP dans Azure")
            print("   ‚Ä¢ Consultez les logs : az webapp log tail --name seeg-backend-api --resource-group seeg-rg")
            
        elif response.status_code == 404:
            print("‚ùå Utilisateur non trouv√©")
            print(f"D√©tails: {response.text}")
        else:
            print(f"‚ùå Erreur {response.status_code}")
            print(f"D√©tails: {response.text}")
    
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erreur lors de la requ√™te: {e}")
        if hasattr(e, 'response') and e.response is not None:
            print(f"D√©tails: {e.response.text if hasattr(e.response, 'text') else str(e.response)}")
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")


def test_password_reset_flow():
    """
    Test complet du flow de r√©initialisation (si un token valide est disponible)
    """
    print("\n\nüîÑ TEST FLOW COMPLET DE R√âINITIALISATION")
    print("=" * 60)
    
    test_email = "pendysevan11@gmail.com"
    
    # 1. Demande de reset
    print("\n1Ô∏è‚É£ √âtape 1: Demande de r√©initialisation")
    reset_data = {"email": test_email}
    
    try:
        response = requests.post(
            f"{API_BASE_URL}/api/v1/auth/forgot-password",
            json=reset_data,
            timeout=15
        )
        
        if response.status_code == 200:
            print("‚úÖ Email de r√©initialisation envoy√©")
            
            print("\n2Ô∏è‚É£ √âtape 2: R√©cup√©ration du token")
            print("‚è≥ Veuillez r√©cup√©rer le token dans l'email re√ßu...")
            print("\nüí° Format du lien: https://[URL]/reset-password?token=VOTRE_TOKEN")
            print("   Copiez uniquement la partie apr√®s 'token='")
            
            # Demander le token √† l'utilisateur
            print("\n" + "=" * 60)
            print("Pour tester le reset complet, vous devrez :")
            print("1. R√©cup√©rer le token de l'email")
            print("2. Appeler manuellement:")
            print(f"   POST {API_BASE_URL}/api/v1/auth/reset-password")
            print("   Body: {{")
            print('     "token": "VOTRE_TOKEN",')
            print('     "new_password": "NouveauMotDePasse123!"')
            print("   }")
            
        else:
            print(f"‚ùå √âchec √©tape 1: {response.status_code}")
            print(f"D√©tails: {response.text}")
    
    except Exception as e:
        print(f"‚ùå Erreur: {e}")


if __name__ == "__main__":
    # Test principal
    test_password_reset_email()
    
    # Attendre un peu
    print("\n" + "=" * 60)
    time.sleep(2)
    
    # Test flow complet (informatif)
    test_password_reset_flow()
    
    print("\n" + "=" * 60)
    print("‚úÖ TEST TERMIN√â")
    print("=" * 60)
    print("\nüìå R√âSUM√â:")
    print("   ‚Ä¢ La requ√™te API a √©t√© envoy√©e")
    print("   ‚Ä¢ V√©rifiez votre email pour confirmer la r√©ception")
    print("   ‚Ä¢ Consultez les logs Azure si n√©cessaire")
    print("\n")

