name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: Validation PR
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check PR title format
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        if [[ ! "$PR_TITLE" =~ ^(feat|fix|docs|style|refactor|test|chore|perf)(\(.+\))?: ]]; then
          echo "‚ùå Le titre de la PR doit suivre le format: type(scope): description"
          echo "Types valides: feat, fix, docs, style, refactor, test, chore, perf"
          exit 1
        fi
        echo "‚úÖ Format du titre valide"
    
    - name: Check PR description
      run: |
        if [ -z "${{ github.event.pull_request.body }}" ]; then
          echo "‚ö†Ô∏è La PR n'a pas de description"
          exit 0
        fi
        echo "‚úÖ Description pr√©sente"
    
    - name: Label PR based on files changed
      uses: actions/labeler@v5
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

  test-pr:
    name: Tests sur PR
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: seeg_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: seeg_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    
    - name: Run tests
      env:
        ENVIRONMENT: test
        DATABASE_URL: postgresql+asyncpg://seeg_test:test_password@localhost:5432/seeg_test_db
      run: |
        pytest --cov=app --cov-report=term -v
    
    - name: Comment PR with coverage
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MINIMUM_GREEN: 40
        MINIMUM_ORANGE: 30

  code-review:
    name: Revue de Code Automatique
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install review tools
      run: |
        pip install flake8 pylint black isort
        pip install -r requirements.txt
    
    - name: Run Black
      run: black --check app/ tests/ || echo "::warning::Code not formatted with Black"
      continue-on-error: true
    
    - name: Run isort
      run: isort --check-only app/ tests/ || echo "::warning::Imports not sorted"
      continue-on-error: true
    
    - name: Run flake8
      run: |
        flake8 app/ tests/ --max-line-length=127 --extend-ignore=E203,W503 || echo "::warning::Flake8 issues found"
      continue-on-error: true

  size-check:
    name: V√©rification Taille PR
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check PR size
      run: |
        FILES_CHANGED=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | wc -l)
        LINES_CHANGED=$(git diff --stat ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | tail -1 | awk '{print $4 + $6}')
        
        echo "üìä Files changed: $FILES_CHANGED"
        echo "üìä Lines changed: $LINES_CHANGED"
        
        if [ $FILES_CHANGED -gt 50 ]; then
          echo "‚ö†Ô∏è Cette PR modifie plus de 50 fichiers. Consid√©rez la diviser."
        fi
        
        if [ $LINES_CHANGED -gt 1000 ]; then
          echo "‚ö†Ô∏è Cette PR modifie plus de 1000 lignes. Consid√©rez la diviser."
        fi

  security-scan:
    name: Scan de S√©curit√© PR
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install security tools
      run: pip install safety bandit
    
    - name: Run safety check
      run: safety check --json || echo "::warning::Vuln√©rabilit√©s d√©tect√©es"
      continue-on-error: true
    
    - name: Run bandit
      run: bandit -r app/ -ll || echo "::warning::Probl√®mes de s√©curit√© d√©tect√©s"
      continue-on-error: true

