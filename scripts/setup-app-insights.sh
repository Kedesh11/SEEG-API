#!/bin/bash
# Script pour cr√©er et configurer Azure Application Insights

set -e

echo "üöÄ Configuration d'Azure Application Insights pour SEEG-API"
echo "=========================================================="

# Variables de configuration
RESOURCE_GROUP="seeg-rg"
LOCATION="francecentral"
APP_INSIGHTS_NAME="seeg-api-insights"
LOG_WORKSPACE_NAME="seeg-logs-workspace"
APP_SERVICE_NAME="seeg-api-prod"

echo ""
echo "üìã Configuration:"
echo "  - Resource Group: $RESOURCE_GROUP"
echo "  - Location: $LOCATION"
echo "  - App Insights: $APP_INSIGHTS_NAME"
echo "  - Log Workspace: $LOG_WORKSPACE_NAME"
echo ""

# V√©rifier la connexion Azure
echo "üîê V√©rification de la connexion Azure..."
if ! az account show &> /dev/null; then
    echo "‚ùå Non connect√© √† Azure. Ex√©cutez: az login"
    exit 1
fi
echo "‚úÖ Connect√© √† Azure"

# Afficher l'abonnement actuel
SUBSCRIPTION=$(az account show --query name -o tsv)
echo "üìå Abonnement actif: $SUBSCRIPTION"
echo ""

# V√©rifier si le resource group existe
echo "üîç V√©rification du resource group..."
if az group show --name $RESOURCE_GROUP &> /dev/null; then
    echo "‚úÖ Resource group '$RESOURCE_GROUP' existe"
else
    echo "‚ùå Resource group '$RESOURCE_GROUP' n'existe pas"
    read -p "Voulez-vous le cr√©er ? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üì¶ Cr√©ation du resource group..."
        az group create --name $RESOURCE_GROUP --location $LOCATION
        echo "‚úÖ Resource group cr√©√©"
    else
        exit 1
    fi
fi
echo ""

# V√©rifier/Cr√©er le Log Analytics Workspace
echo "üîç V√©rification du Log Analytics Workspace..."
if az monitor log-analytics workspace show \
    --resource-group $RESOURCE_GROUP \
    --workspace-name $LOG_WORKSPACE_NAME &> /dev/null; then
    echo "‚úÖ Workspace '$LOG_WORKSPACE_NAME' existe"
    WORKSPACE_ID=$(az monitor log-analytics workspace show \
        --resource-group $RESOURCE_GROUP \
        --workspace-name $LOG_WORKSPACE_NAME \
        --query id -o tsv)
else
    echo "üìä Cr√©ation du Log Analytics Workspace..."
    WORKSPACE_ID=$(az monitor log-analytics workspace create \
        --resource-group $RESOURCE_GROUP \
        --workspace-name $LOG_WORKSPACE_NAME \
        --location $LOCATION \
        --query id -o tsv)
    echo "‚úÖ Workspace cr√©√©: $WORKSPACE_ID"
fi
echo ""

# Cr√©er Application Insights
echo "üìà Cr√©ation d'Application Insights..."
if az monitor app-insights component show \
    --app $APP_INSIGHTS_NAME \
    --resource-group $RESOURCE_GROUP &> /dev/null; then
    echo "‚ö†Ô∏è  Application Insights '$APP_INSIGHTS_NAME' existe d√©j√†"
else
    az monitor app-insights component create \
        --app $APP_INSIGHTS_NAME \
        --location $LOCATION \
        --resource-group $RESOURCE_GROUP \
        --workspace $WORKSPACE_ID \
        --application-type web \
        --kind web
    echo "‚úÖ Application Insights cr√©√©"
fi
echo ""

# R√©cup√©rer la connection string
echo "üîë R√©cup√©ration de la connection string..."
CONNECTION_STRING=$(az monitor app-insights component show \
    --app $APP_INSIGHTS_NAME \
    --resource-group $RESOURCE_GROUP \
    --query connectionString -o tsv)

if [ -z "$CONNECTION_STRING" ]; then
    echo "‚ùå Impossible de r√©cup√©rer la connection string"
    exit 1
fi

echo "‚úÖ Connection string r√©cup√©r√©e"
echo ""

# Afficher la connection string
echo "=========================================================="
echo "üéâ Configuration r√©ussie !"
echo "=========================================================="
echo ""
echo "üìã Informations Application Insights:"
echo ""
echo "Nom: $APP_INSIGHTS_NAME"
echo "Resource Group: $RESOURCE_GROUP"
echo "Location: $LOCATION"
echo ""
echo "üîë Connection String:"
echo "$CONNECTION_STRING"
echo ""

# Sauvegarder dans un fichier .env.insights
echo "üíæ Sauvegarde de la configuration..."
cat > .env.insights << EOF
# Azure Application Insights Configuration
# G√©n√©r√© le: $(date)

APPLICATIONINSIGHTS_CONNECTION_STRING=$CONNECTION_STRING
EOF
echo "‚úÖ Configuration sauvegard√©e dans .env.insights"
echo ""

# Configurer l'App Service si elle existe
echo "üîß Configuration de l'App Service..."
if az webapp show --name $APP_SERVICE_NAME --resource-group $RESOURCE_GROUP &> /dev/null; then
    echo "üì± Configuration de '$APP_SERVICE_NAME'..."
    az webapp config appsettings set \
        --name $APP_SERVICE_NAME \
        --resource-group $RESOURCE_GROUP \
        --settings APPLICATIONINSIGHTS_CONNECTION_STRING="$CONNECTION_STRING"
    echo "‚úÖ App Service configur√©"
    echo ""
    echo "‚ö†Ô∏è  N'oubliez pas de red√©marrer l'App Service:"
    echo "   az webapp restart --name $APP_SERVICE_NAME --resource-group $RESOURCE_GROUP"
else
    echo "‚ö†Ô∏è  App Service '$APP_SERVICE_NAME' non trouv√©"
    echo "   Vous devrez configurer manuellement la variable d'environnement"
fi
echo ""

# Instructions finales
echo "=========================================================="
echo "üìù Prochaines √©tapes:"
echo "=========================================================="
echo ""
echo "1. Pour le d√©veloppement local:"
echo "   Ajoutez √† votre fichier .env:"
echo "   APPLICATIONINSIGHTS_CONNECTION_STRING=\"$CONNECTION_STRING\""
echo ""
echo "2. V√©rifiez la configuration:"
echo "   python -c \"from app.main import app; from app.core.monitoring import app_insights; print('App Insights:', app_insights.enabled)\""
echo ""
echo "3. Testez l'application:"
echo "   uvicorn app.main:app --reload"
echo "   curl http://localhost:8000/info | jq .monitoring"
echo ""
echo "4. Consultez les donn√©es (apr√®s 2-5 minutes):"
echo "   Portal Azure > Application Insights > $APP_INSIGHTS_NAME > Live Metrics"
echo ""
echo "5. URL du portail:"
echo "   https://portal.azure.com/#@/resource/subscriptions/$(az account show --query id -o tsv)/resourceGroups/$RESOURCE_GROUP/providers/microsoft.insights/components/$APP_INSIGHTS_NAME"
echo ""
echo "‚úÖ Configuration termin√©e avec succ√®s !"
echo ""

